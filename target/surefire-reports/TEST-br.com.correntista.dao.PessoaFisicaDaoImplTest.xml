<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="5" failures="0" name="br.com.correntista.dao.PessoaFisicaDaoImplTest" time="51.159" errors="2" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="11.0.11+9-LTS"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\zulu11.48.21-ca-jdk11.0.11-win_x64\bin"/>
    <property name="jdk.vendor.version" value="Zulu11.48+21-CA"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\alf_a\Documents\NetBeansProjects\br.com_correntista_jsf"/>
    <property name="java.vm.vendor" value="Azul Systems, Inc."/>
    <property name="java.vendor.url" value="http://www.azulsystems.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="BR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="test" value="br.com.correntista.dao.**.*Test"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\alf_a\Documents\NetBeansProjects\br.com_correntista_jsf"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="11.0.11+9-LTS"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\alf_a\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="maven.ext.class.path" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="classworlds.conf" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven\bin\..\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\zulu11.48.21-ca-jdk11.0.11-win_x64\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Java\zulu11.48.21-ca-jdk11.0.11-win_x64\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\alf_a\AppData\Local\Microsoft\WindowsApps;;C:\Users\alf_a\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\alf_a\AppData\Roaming\npm;."/>
    <property name="maven.conf" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven\bin\../conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven\bin\..\lib\jansi-native"/>
    <property name="user.home" value="C:\Users\alf_a"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="alf_a"/>
    <property name="java.class.path" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven\bin\..\boot\plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -Dtest=br.com.correntista.dao.**.*Test -Dmaven.ext.class.path=C:\Program Files\NetBeans-12.0\netbeans\java\maven-nblib\netbeans-eventspy.jar -Dfile.encoding=UTF-8 surefire:test"/>
    <property name="java.home" value="C:\Program Files\Java\zulu11.48.21-ca-jdk11.0.11-win_x64"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="11.0.11"/>
    <property name="java.vendor" value="Azul Systems, Inc."/>
    <property name="maven.home" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven\bin\.."/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2021-04-20"/>
    <property name="java.vendor.url.bug" value="http://www.azulsystems.com/support/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="Zulu11.48+21-CA"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="br.com.correntista.dao.PessoaFisicaDaoImplTest" name="testExcluir" time="0.006">
    <error message="could not execute statement" type="org.hibernate.exception.ConstraintViolationException">org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:72)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:49)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:126)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:190)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.delete(AbstractEntityPersister.java:3400)
	at org.hibernate.persister.entity.AbstractEntityPersister.delete(AbstractEntityPersister.java:3624)
	at org.hibernate.action.internal.EntityDeleteAction.execute(EntityDeleteAction.java:113)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:453)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:345)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:350)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:56)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1218)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:421)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.beforeTransactionCommit(JdbcTransaction.java:101)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:177)
	at br.com.correntista.dao.BaseDaoImpl.excluir(BaseDaoImpl.java:26)
	at br.com.correntista.dao.PessoaFisicaDaoImplTest.testExcluir(PessoaFisicaDaoImplTest.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`correntista`.`cartao`, CONSTRAINT `FK_5bmn3w3ria16auiwsj4luysow` FOREIGN KEY (`id_cliente`) REFERENCES `cliente` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:187)
	... 43 more
</error>
    <system-out>excluir
Hibernate: 
    select
        pessoafisi0_.id_cliente as id1_1_,
        pessoafisi0_1_.email as email2_1_,
        pessoafisi0_1_.nome as nome3_1_,
        pessoafisi0_.cpf as cpf1_4_,
        pessoafisi0_.id_profissao as id_profi4_4_,
        pessoafisi0_.rg as rg2_4_ 
    from
        pessoa_fisica pessoafisi0_ 
    inner join
        cliente pessoafisi0_1_ 
            on pessoafisi0_.id_cliente=pessoafisi0_1_.id
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        profissao0_.id as id1_6_0_,
        profissao0_.descricao as descrica2_6_0_,
        profissao0_.nome as nome3_6_0_,
        profissao0_.tipoContrato as tipoCont4_6_0_ 
    from
        profissao profissao0_ 
    where
        profissao0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        profissao0_.id as id1_6_0_,
        profissao0_.descricao as descrica2_6_0_,
        profissao0_.nome as nome3_6_0_,
        profissao0_.tipoContrato as tipoCont4_6_0_ 
    from
        profissao profissao0_ 
    where
        profissao0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        profissao0_.id as id1_6_0_,
        profissao0_.descricao as descrica2_6_0_,
        profissao0_.nome as nome3_6_0_,
        profissao0_.tipoContrato as tipoCont4_6_0_ 
    from
        profissao profissao0_ 
    where
        profissao0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    delete 
    from
        pessoa_fisica 
    where
        id_cliente=?
Hibernate: 
    delete 
    from
        cliente 
    where
        id=?
</system-out>
    <system-err>nov 15, 2021 5:39:55 PM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
WARN: SQL Error: 1451, SQLState: 23000
nov 15, 2021 5:39:55 PM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
ERROR: Cannot delete or update a parent row: a foreign key constraint fails (`correntista`.`cartao`, CONSTRAINT `FK_5bmn3w3ria16auiwsj4luysow` FOREIGN KEY (`id_cliente`) REFERENCES `cliente` (`id`))
nov 15, 2021 5:39:55 PM org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl release
INFO: HHH000010: On release of batch it still contained JDBC statements
</system-err>
  </testcase>
  <testcase classname="br.com.correntista.dao.PessoaFisicaDaoImplTest" name="testPesquisarPorNome" time="0.016"/>
  <testcase classname="br.com.correntista.dao.PessoaFisicaDaoImplTest" name="testAlterar" time="51.069">
    <error message="could not execute statement" type="org.hibernate.exception.LockAcquisitionException">org.hibernate.exception.LockAcquisitionException: could not execute statement
	at org.hibernate.dialect.MySQLDialect$1.convert(MySQLDialect.java:451)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:49)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:126)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:190)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3281)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3183)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3525)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:158)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:453)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:345)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:350)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:56)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1218)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:421)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.beforeTransactionCommit(JdbcTransaction.java:101)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:177)
	at br.com.correntista.dao.BaseDaoImpl.salvarOuAlterar(BaseDaoImpl.java:19)
	at br.com.correntista.dao.PessoaFisicaDaoImplTest.testAlterar(PessoaFisicaDaoImplTest.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:123)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:187)
	... 44 more
</error>
    <system-out>alterar
Hibernate: 
    select
        pessoafisi0_.id_cliente as id1_1_,
        pessoafisi0_1_.email as email2_1_,
        pessoafisi0_1_.nome as nome3_1_,
        pessoafisi0_.cpf as cpf1_4_,
        pessoafisi0_.id_profissao as id_profi4_4_,
        pessoafisi0_.rg as rg2_4_ 
    from
        pessoa_fisica pessoafisi0_ 
    inner join
        cliente pessoafisi0_1_ 
            on pessoafisi0_.id_cliente=pessoafisi0_1_.id
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        profissao0_.id as id1_6_0_,
        profissao0_.descricao as descrica2_6_0_,
        profissao0_.nome as nome3_6_0_,
        profissao0_.tipoContrato as tipoCont4_6_0_ 
    from
        profissao profissao0_ 
    where
        profissao0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        profissao0_.id as id1_6_0_,
        profissao0_.descricao as descrica2_6_0_,
        profissao0_.nome as nome3_6_0_,
        profissao0_.tipoContrato as tipoCont4_6_0_ 
    from
        profissao profissao0_ 
    where
        profissao0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        profissao0_.id as id1_6_0_,
        profissao0_.descricao as descrica2_6_0_,
        profissao0_.nome as nome3_6_0_,
        profissao0_.tipoContrato as tipoCont4_6_0_ 
    from
        profissao profissao0_ 
    where
        profissao0_.id=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        endereco0_.id as id1_2_3_,
        endereco0_.bairro as bairro2_2_3_,
        endereco0_.cep as cep3_2_3_,
        endereco0_.id_cliente as id_clien9_2_3_,
        endereco0_.complemento as compleme4_2_3_,
        endereco0_.localidade as localida5_2_3_,
        endereco0_.logradouro as logradou6_2_3_,
        endereco0_.numero as numero7_2_3_,
        endereco0_.uf as uf8_2_3_,
        cliente1_.id as id1_1_0_,
        cliente1_.email as email2_1_0_,
        cliente1_.nome as nome3_1_0_,
        cliente1_1_.cpf as cpf1_4_0_,
        cliente1_1_.id_profissao as id_profi4_4_0_,
        cliente1_1_.rg as rg2_4_0_,
        cliente1_2_.cnpj as cnpj1_5_0_,
        cliente1_2_.inscricao_estadual as inscrica2_5_0_,
        case 
            when cliente1_1_.id_cliente is not null then 1 
            when cliente1_2_.id_cliente is not null then 2 
            when cliente1_.id is not null then 0 
        end as clazz_0_,
        cartaos2_.id_cliente as id_clien5_1_5_,
        cartaos2_.id as id1_0_5_,
        cartaos2_.id as id1_0_1_,
        cartaos2_.anoValidade as anoValid2_0_1_,
        cartaos2_.bandeira as bandeira3_0_1_,
        cartaos2_.id_cliente as id_clien5_0_1_,
        cartaos2_.numero as numero4_0_1_,
        profissao3_.id as id1_6_2_,
        profissao3_.descricao as descrica2_6_2_,
        profissao3_.nome as nome3_6_2_,
        profissao3_.tipoContrato as tipoCont4_6_2_ 
    from
        endereco endereco0_ 
    left outer join
        cliente cliente1_ 
            on endereco0_.id_cliente=cliente1_.id 
    left outer join
        pessoa_fisica cliente1_1_ 
            on cliente1_.id=cliente1_1_.id_cliente 
    left outer join
        pessoa_juridica cliente1_2_ 
            on cliente1_.id=cliente1_2_.id_cliente 
    left outer join
        cartao cartaos2_ 
            on cliente1_.id=cartaos2_.id_cliente 
    left outer join
        profissao profissao3_ 
            on cliente1_1_.id_profissao=profissao3_.id 
    where
        endereco0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    select
        cartaos0_.id_cliente as id_clien5_1_0_,
        cartaos0_.id as id1_0_0_,
        cartaos0_.id as id1_0_1_,
        cartaos0_.anoValidade as anoValid2_0_1_,
        cartaos0_.bandeira as bandeira3_0_1_,
        cartaos0_.id_cliente as id_clien5_0_1_,
        cartaos0_.numero as numero4_0_1_ 
    from
        cartao cartaos0_ 
    where
        cartaos0_.id_cliente=?
Hibernate: 
    update
        cliente 
    set
        email=?,
        nome=? 
    where
        id=?
</system-out>
    <system-err>nov 15, 2021 5:40:46 PM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
WARN: SQL Error: 1205, SQLState: 40001
nov 15, 2021 5:40:46 PM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
ERROR: Lock wait timeout exceeded; try restarting transaction
nov 15, 2021 5:40:46 PM org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl release
INFO: HHH000010: On release of batch it still contained JDBC statements
</system-err>
  </testcase>
  <testcase classname="br.com.correntista.dao.PessoaFisicaDaoImplTest" name="testPesquisarPorCpf" time="0.068"/>
  <testcase classname="br.com.correntista.dao.PessoaFisicaDaoImplTest" name="testSalvar" time="0"/>
</testsuite>